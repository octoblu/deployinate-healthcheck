#!/bin/bash
NAMESPACE=$1
SERVICE_NAME=$2
COLOR=$3

TARGET_COUNT=`etcdctl get /${NAMESPACE}/${SERVICE_NAME}/count`

echo "Waiting for ${TARGET_COUNT} servers..."
x=0
CURRENT_COUNT=0
while [ "$x" -lt 20 -a ${TARGET_COUNT} -ne ${CURRENT_COUNT} ]; do
   CURRENT_COUNT=`etcdctl ls /vulcand/backends/${NAMESPACE}-${SERVICE_NAME}-${COLOR}/servers | wc -l`
   if [ ${TARGET_COUNT} -eq ${CURRENT_COUNT} ]; then
     continue
   fi
   x=$((x+1))
   sleep 10
done

if [ ${TARGET_COUNT} -ne ${CURRENT_COUNT} ]; then
  echo "${NAMESPACE}-${SERVICE_NAME}-${COLOR} is not ready, giving up."
  exit 1
fi

x=0
CURRENT_COUNT=0

while [ "$x" -lt 60 -a ${TARGET_COUNT} -ne ${CURRENT_COUNT} ]; do
  CURRENT_INSTANCE=$((CURRENT_COUNT+1))
  echo "Checking healthcheck status, attempt ${x}"
  SERVER_URL=`etcdctl get /vulcand/backends/${NAMESPACE}-${SERVICE_NAME}-${COLOR}/servers/${NAMESPACE}-${SERVICE_NAME}-${COLOR}-${CURRENT_INSTANCE} | jq -r '.URL'`
  SERVER_HOST=$(echo $SERVER_URL | grep -o -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')
  SERVER_PORT=$(echo $SERVER_URL | grep -o -E '[0-9]+$')

  curl --silent -I ${SERVER_URL}/healthcheck | head -n 1 | awk '{print $2}' | grep '200'
  HEALTHCHECK_STATUS=$?

  echo "Got HEALTHCHECK_STATUS: ${HEALTHCHECK_STATUS}"
  if [ $HEALTHCHECK_STATUS -eq 0 ]; then
    CURRENT_COUNT=$((CURRENT_COUNT+1))
    continue
  fi
  x=$((x+1))
  sleep 1
done

if [ ${TARGET_COUNT} -ne ${CURRENT_COUNT} ]; then
  echo "${NAMESPACE}-${SERVICE_NAME}-${COLOR} is not ready, giving up."
  exit 1
fi
